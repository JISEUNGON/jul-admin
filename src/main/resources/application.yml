server:
  port: ${PORT}

spring:
  application:
    name: admin
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_SCHEMA}?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: none #create, create-drop, none, update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
    generate-ddl: false
  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USER_NAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          ssl:
            enable: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
          # auth-code-expiration-millis : 유효시간 5 * 60 * 1000 = 5분


eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${EUREKA_SERVER_HOST}/eureka
    instance:
      prefer-ip-address: ${EUREKA_INSTANCE_PREFER_IP_ADDRESS}
      ip-address: ${EUREKA_INSTANCE_IP_ADDRESS}

jwt:
  secret: ${JWT_SECRET_KEY}


amazon:
  dynamodb:
    endpoint: ${DYNAMODB_ENDPOINT}
    region: ${DYNAMODB_REGION}
  aws:
    accessKey: ${DYNAMODB_ACCESS_KEY}
    secretKey: ${DYNAMODB_SECRET_KEY}
#
#logging:
#  slack:
#    webhook-url: ${SLACK_WEBHOOK_URL}
#  config: classpath:logback.xml


